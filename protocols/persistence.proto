package chattp;

import "message.proto";

//option optimize_for = LITE_RUNTIME;

message PersistenceRequest
{
    required uint64 sequence_number = 1;

    enum PersistenceRequestType
    {
        REGISTER = 0;
        LOGIN = 1;
        LOGOUT = 2;
        CHECKPASS = 3;
        LOOKUP = 4;
        SAVEMESSAGE = 5;
        GETMESSAGES = 6;

        // Used by webapp
        SAVESETTINGS = 7;
        GETSETTINGS = 8;

        CHANNEL_HEARTBEAT = 9;
    }
    required PersistenceRequestType type = 2;

    optional string user_name = 3; // REGISTER LOGIN LOGOUT CHECKPASS SAVEMESSAGE GETMESSAGES. May not be be used for LOOKUPs!!!
    optional string password = 4; // REGISTER CHECKPASS

    optional string email = 5; // REGISTER -- though not used yet.

    optional string channel_id = 6; // LOGIN (LOGOUT, in future for multiple logged-in users)
    optional string broker_name = 7; // LOGIN

    // In this list, multiple user names may be put. The persistence layer software shall look up
    // all channels for each user name and concatenate that list of lists of locations so the first
    // user's location(s) are at the first place(s) in the returned list of UserLocations (see PersistenceResponse)
    repeated string lookup_users = 8; // LOOKUP multiple users.

    optional ChattpMessage mesg = 9; // SAVEMESSAGE

    optional string settings = 10; // SAVESETTINGS
}

message PersistenceResponse
{
    required uint64 sequence_number = 1;

    enum PersistenceResponseType
    {
        REGISTERED = 0;
        LOGGEDIN = 1;
        LOGGEDOUT = 2;
        CHECKEDPASS = 3;
        LOOKEDUP = 4;
        SAVEDMESSAGE = 5;
        GOTMESSAGES = 6;

        // Used for webapp
        SAVEDSETTINGS = 7;
        GOTSETTINGS = 8;

        HEARTBEAT_RECEIVED = 9;
    }

    required PersistenceResponseType type = 2;
    optional bool status = 3 [default = true];

    message UserLocation
    {
        optional bool online = 1 [default = true];
        optional string user_name = 2;
        optional string broker_name = 3;
        optional string channel_id = 4;
    }

    // List of user locations as response to a LOOKUP request (see field "lookup_users" in PersistenceRequest message)
    repeated UserLocation user_locations = 4;

    repeated ChattpMessage mesgs = 5; // GOTMESSAGES

    optional string settings = 6; // GOTSETTINGS
}
